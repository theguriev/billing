version: "3"

networks:
  backend:
    driver: bridge

services:
  mongo:
    image: mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    logging:
      driver: none
    networks:
      - backend
    ports:
      - 27017:27017
    volumes:
      - ~/mongo/data:/data/db

  mongo-express:
    image: mongo-express
    restart: unless-stopped
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
    depends_on:
      - mongo
    logging:
      driver: none
    networks:
      - backend

  authorization:
    image: therealguriev/service-authorization:3125b19fae7fbb45c19968d822b02e802056bc99
    restart: unless-stopped
    depends_on:
      - mongo
    logging:
      driver: none
    networks:
      - backend
    environment:
      NITRO_MONGO_URI: "mongodb://root:example@mongo:27017/"
      NITRO_SECRET: "secret"

  streams:
    image: therealguriev/service-walls:0e03017bfc7eee55c95c115c8987f2b377fcd0c0
    restart: unless-stopped
    depends_on:
      - mongo
    logging:
      driver: none
    networks:
      - backend
    environment:
      NITRO_MONGO_URI: "mongodb://root:example@mongo:27017/"
      NITRO_SECRET: "secret"

  gateway:
    image: therealguriev/service-gateway:5041a92cb129abc74288e9a4e5e4f757ab3fdd6d
    ports:
      - "80:3000"
    environment:
      NITRO_SECRET: "secret"
      NITRO_ROUTES_FILE: "/routes.json"
    volumes:
      - ./routes.json:/routes.json
    depends_on:
      - mongo-express
      - authorization
      - streams
    networks:
      - backend
